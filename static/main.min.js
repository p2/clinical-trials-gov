function initApp(){window!=window.top&&$("#back_to_patient_select").hide();loadDemographics();loadProblemList()}function loadDemographics(){$.ajax({url:"demographics",dataType:"json"}).always(function(obj1,status,obj2){var json="success"==status?obj1:"parsererror"==status?{}:null,demo={};json?demo=json:console.warn("No good response for demographics",obj1,obj2);$("#patient_overview").html("templates/patient_demographics.ejs",{demo:demo})})}function loadProblemList(){$.ajax({url:"problems",dataType:"json"}).always(function(obj1,status,obj2){var json="success"==status?obj1:"parsererror"==status?{}:null;if(json)$("#patient_problems").html("templates/patient_problems.ejs",{data:json});else{$("#patient_problems").text("Could not load the problem list, see the console for details");console.warn("No good response for problems",obj1,obj2)}})}function didClickProblem(problem_id){var prob_list=$("#problem_list"),prob_elem=$("#"+problem_id);if(!prob_elem.is("*")){alert("Error");return}if(!prob_elem.hasClass("active")){prob_elem.addClass("active");prob_list.find("li").each(function(idx,elem){problem_id!=elem.getAttribute("id")&&$(elem).slideUp("fast")});var prob_name=$("#"+problem_id).find("div.bigger").text();prob_name||(prob_name="diabetic cardiomyopathy");_initTrialSearch(prob_name)}else{prob_list.find("li").each(function(idx,elem){$(elem).slideDown("fast")});prob_elem.removeClass("active");$("#trials").empty()}}function _initTrialSearch(problem_name){if(_trialSearchInterval){console.warn("Already searching");return}_showTrialStatus("Starting...");$.ajax({url:"trial_runs",data:{cond:problem_name}}).always(function(obj1,status,obj2){if("success"==status)_trialSearchInterval=window.setInterval(function(){_checkTrialStatus(obj1)},1e3);else{console.error(obj1," -- ",status," -- ",obj2);_showTrialStatus("Error, see console")}})}function _checkTrialStatus(run_id){$.ajax({url:"trial_runs/"+run_id+"/progress"}).always(function(obj1,status,obj2){if("success"==status)if("done"==obj1){window.clearInterval(_trialSearchInterval);_trialSearchInterval=null;_showTrialStatus("Retrieving results...");_getTrialResults(run_id)}else{if(obj1&&obj1.length>5&&obj1.match(/^error/i)){window.clearInterval(_trialSearchInterval);_trialSearchInterval=null}_showTrialStatus(obj1)}else{console.error(obj1,status,obj2);_showTrialStatus("Error checking trial status, see console");window.clearInterval(_trialSearchInterval);_trialSearchInterval=null}})}function _getTrialResults(run_id){$.ajax({url:"trial_runs/"+run_id+"/results",dataType:"json"}).always(function(obj1,status,obj2){if("success"==status){_showTrialStatus("Found "+obj1.length+" trials, filtering by demographics...");_filterTrialsByDemographics(run_id)}else{console.error(obj1,status,obj2);_showTrialStatus("Error getting trial results, see console")}})}function _filterTrialsByDemographics(run_id){$.ajax({url:"trial_runs/"+run_id+"/filter/demographics",dataType:"json"}).always(function(obj1,status,obj2){if("success"==status){_showTrialStatus("Filtering by problem list...");_filterTrialsByProblems(run_id)}else{console.error(obj1,status,obj2);_showTrialStatus("Error filtering trials (demographics), see console")}})}function _filterTrialsByProblems(run_id){$.ajax({url:"trial_runs/"+run_id+"/filter/problems",dataType:"json"}).always(function(obj1,status,obj2){if("success"==status){_showTrialStatus();_loadTrials(obj1)}else{console.error(obj1,status,obj2);_showTrialStatus("Error filtering trials (problems), see console")}})}function _loadTrials(trial_tuples){var main=$("#trials"),loader=$("<div/>",{id:"trial_loader"}).text("Loading trials..."),list_good=$("<ul/>",{id:"trials_good"}),list_bad=$("<ul/>",{id:"trials_bad"});main.append(loader);main.append("<h3>Matching Trials</h3>");main.append(list_good);main.append("<h3>Filtered Trials</h3>");main.append(list_bad);for(var i=0;i<trial_tuples.length;i++){var tpl=trial_tuples[i],nct=tpl[0],reason=null;tpl.length>0&&(reason=tpl[1]);$.ajax({url:"trials/"+nct,dataType:"json",context:{reason:reason}}).always(function(obj1,status,obj2){if("success"==status){if(loader){loader.remove();loader=null}var li=$("<li/>",{id:obj1.nct}),detail=$("<div/>").hide().html(text2html(obj1.criteria.formatted));detail.addClass("formatted_criteria");var title=$("<a/>",{href:"javascript:void(0)"});title.click(function(){detail.toggle()});title.text(obj1.nct);var link=$("<a/>",{href:"http://www.clinicaltrials.gov/ct2/show/"+obj1.nct,target:"_blank"});link.addClass("supplement");link.text("Â» ClinicalTrials.gov");li.append(title);li.append(link);li.append(detail);console.log("REASON:",this.reason);if(this.reason){li.append("<tt>REASON: "+this.reason+"</tt>");list_bad.append(li)}else list_good.append(li)}else console.error(obj1,status,obj2)})}}function _showTrialStatus(status){$("#trials").empty().text(status)}function text2html(string){if(!string)return"";var conv=string.replace(/(^\s+)|(\s+$)/g,"");conv=conv.replace(/(\r\n|\n)/g,"<br />");return conv}function compareMedByNameASC(a,b){return"sp:drugName"in a?"dcterms:title"in a["sp:drugName"]?"sp:drugName"in b?"dcterms:title"in b["sp:drugName"]?a["sp:drugName"]["dcterms:title"]<b["sp:drugName"]["dcterms:title"]?-1:a["sp:drugName"]["dcterms:title"]>b["sp:drugName"]["dcterms:title"]?1:0:-1:-1:1:1}function compareProblemByNameASC(a,b){return"sp:problemName"in a?"dcterms:title"in a["sp:problemName"]?"sp:problemName"in b?"dcterms:title"in b["sp:problemName"]?a["sp:problemName"]["dcterms:title"]<b["sp:problemName"]["dcterms:title"]?-1:a["sp:problemName"]["dcterms:title"]>b["sp:problemName"]["dcterms:title"]?1:0:-1:-1:1:1}function compareByDateDESC(a,b){return"date"in a?"date"in b?parseInt(a.date)<parseInt(b.date)?1:parseInt(a.date)>parseInt(b.date)?-1:0:-1:1}var _ruleCtrl=null,_reportCtrl=null,_globals={},_trialSearchInterval=null;Array.prototype.contains=function(obj){return this.indexOf(obj)>=0};Array.prototype.indexOf=function(obj){for(var i=0;i<this.length;i++)if(this[i]==obj)return i;return-1};window.console||function(){var names=["log","debug","info","warn","error","assert","dir","dirxml","group","groupEnd","time","timeEnd","count","trace","profile","profileEnd"],l=names.length;window.console={};for(var i=0;i<l;i++)window.console[names[i]]=function(){}}();